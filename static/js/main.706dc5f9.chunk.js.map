{"version":3,"sources":["components/getDate.js","components/Api.js","components/Search.jsx","App.js","index.js"],"names":["getDate","date","day","getDay","month","getMonth","getFullYear","Api","key","link","Search","dates","Date","useState","query","setQuery","info","setInfo","fetchAPI","fetch","then","res","json","data","name","temperature","Math","floor","main","temp","description","weather","catch","err","message","className","type","id","required","autoFocus","onChange","console","log","onKeyPress","e","document","getElementById","value","onKeyDownCapture","length","substring","autoComplete","htmlFor","onClick","x","y","width","height","viewBox","fill","d","country","App","ReactDOM","render","StrictMode"],"mappings":"oMA+BeA,EA/BC,SAACC,GACf,IAwBMC,EAxBO,CACX,SACA,UACA,YACA,WACA,SACA,WACA,UAiBeD,EAAKE,UAChBC,EAhBS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAImBH,EAAKI,YAE1B,MAAM,GAAN,OAAUH,EAAV,aAAkBD,EAAKD,UAAvB,YAAoCI,EAApC,eAAgDH,EAAKK,gBCvBxCC,G,WALH,CACVC,IAAK,mCACLC,KAAM,uD,OCoGOC,EAhGA,WAEX,IAAMC,EAAQX,EAAQ,IAAIY,MAE1B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAW,WACb,IAAcV,EAAQD,EAARC,IAEdW,MAAM,GAAD,OAFiBZ,EAAdE,MAEH,OAAWK,EAAX,+BAAuCN,IACvCY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAQ,CAClBO,KAAK,GAAD,OAAKD,EAAKC,MAEdC,YAAY,GAAD,OAAKC,KAAKC,MAAMJ,EAAKK,KAAKC,OACrCC,YAAY,GAAD,OAAKP,EAAKQ,QAAQ,GAAGD,kBAEnCE,OAAM,SAAAC,GAAG,OAAIhB,EAAQ,CAAEiB,QAASD,QAwBzC,OACI,qBAAKE,UAAU,mBAAf,SACI,iCACI,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,uBACIC,KAAK,OACLZ,KAAK,cACLW,UAAU,eACVE,GAAG,SACHC,UAAQ,EACRC,WAAS,EACTC,SAAU,kBAAMC,QAAQC,IAAI5B,IAC5B6B,WAlCR,SAACC,GACC,UAAVA,EAAEpC,KAAmBqC,SAASC,eAAe,UAAUC,OACvD7B,IACAH,EAAS,IACT8B,SAASC,eAAe,UAAUC,MAAQ,IACzB,MAAVH,EAAEpC,IACTO,EAASD,EAAQ,OAEjBC,EAASD,EAAQ8B,EAAEpC,MA2BHwC,iBAvBL,SAACJ,GACF,cAAVA,EAAEpC,KAAmD,MAA5BM,EAAMA,EAAMmC,OAAS,GAC9ClC,EAASD,EAAMoC,UAAU,EAAGpC,EAAMmC,OAAS,IAC1B,cAAVL,EAAEpC,KACTO,EAASD,EAAMoC,UAAU,EAAGpC,EAAMmC,OAAS,KAoB3BE,aAAa,QAEjB,uBAAOC,QAAQ,SAASjB,UAAU,cAAlC,SACI,mEAGR,mBAAGkB,QAAS,WACJR,SAASC,eAAe,UAAUC,QAClC7B,IACAH,EAAS,IACT8B,SAASC,eAAe,UAAUC,MAAQ,KAJlD,SAOI,qBAAKO,EAAE,MAAMC,EAAE,MAAMC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,sBAApD,SAA0E,sBAAMC,KAAK,eAAeC,EAAE,qcAI5G5C,EAAKQ,MAAQR,EAAK6C,SAAW7C,EAAKS,aAAeT,EAAKc,YAClD,qBAAKK,UAAU,gBAAf,SACE,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,mBAA+BnB,EAAKQ,UAExC,qBAAKW,UAAU,OAAf,SAAuBxB,IACvB,sBAAKwB,UAAU,kBAAf,UAAkCnB,EAAKS,YAAvC,WACA,qBAAKU,UAAU,OAAf,SAAuBnB,EAAKc,mBAIlC,qBAAKK,UAAU,gBAAf,SACE,qBAAKA,UAAU,iBAAf,SACI,oBAAGA,UAAU,OAAb,UAAqBnB,EAAKkB,QAA1B,kBCpFb4B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,U","file":"static/js/main.706dc5f9.chunk.js","sourcesContent":["const getDate = (date) => {\r\n  const days = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n  ];\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"Juny\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  const day = days[date.getDay()];\r\n  const month = months[date.getMonth()];\r\n\r\n  return `${day}, ${date.getDate()} ${month} of ${date.getFullYear()}`;\r\n};\r\n\r\nexport default getDate;\r\n","const Api = {\r\n  key: \"246e5d80fee91983521003f3e63c37c3\",\r\n  link: \"https://api.openweathermap.org/data/2.5/weather?q=\",\r\n};\r\n\r\nexport default Api;\r\n","import getDate from \"./getDate\";\r\nimport \"./search.scss\";\r\nimport \"./api-data.scss\";\r\nimport { useState } from \"react\";\r\nimport Api from \"./Api\"\r\n\r\nconst Search = () => {\r\n\r\n    const dates = getDate(new Date());\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [info, setInfo] = useState({})\r\n\r\n    const fetchAPI = () => {\r\n        const { link, key } = Api\r\n\r\n        fetch(`${link}${query}&units=metric&appid=${key}`)\r\n            .then(res => res.json())\r\n            .then(data => setInfo({\r\n                name: `${data.name}`,\r\n                // country: `${data.sys.country}`,\r\n                temperature: `${Math.floor(data.main.temp)}`,\r\n                description: `${data.weather[0].description}`\r\n            }))\r\n            .catch(err => setInfo({ message: err }))\r\n    }\r\n\r\n    const getData = (e) => {\r\n        if (e.key === \"Enter\" && document.getElementById(\"search\").value) {\r\n            fetchAPI()\r\n            setQuery('')\r\n            document.getElementById(\"search\").value = '';\r\n        } else if (e.key === \" \") {\r\n            setQuery(query + '%20')\r\n        } else {\r\n            setQuery(query + e.key)\r\n        }\r\n    }\r\n\r\n    const deleteWord = (e) => {\r\n        if (e.key === \"Backspace\" && query[query.length - 1] === \"0\") {\r\n            setQuery(query.substring(0, query.length - 3))\r\n        } else if (e.key === \"Backspace\") {\r\n            setQuery(query.substring(0, query.length - 1))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"global-container\">\r\n            <main>\r\n                <div className=\"search-input-container\">\r\n                    <div className=\"animation\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"search city\"\r\n                            className=\"search-input\"\r\n                            id=\"search\"\r\n                            required\r\n                            autoFocus\r\n                            onChange={() => console.log(query)}\r\n                            onKeyPress={getData}\r\n                            onKeyDownCapture={deleteWord}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <label htmlFor=\"search\" className=\"placeholder\">\r\n                            <span>City, Country Abbreviation</span>\r\n                        </label>\r\n                    </div>\r\n                    <i onClick={() => {\r\n                        if (document.getElementById(\"search\").value) {\r\n                            fetchAPI()\r\n                            setQuery('')\r\n                            document.getElementById(\"search\").value = '';\r\n                        }\r\n                    }}>\r\n                        <svg x=\"0px\" y=\"0px\" width=\"32\" height=\"32\" viewBox=\"0 0 512.005 512.005\"><path fill=\"currentcolor\" d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667 S0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6 c4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\" /></svg>\r\n                    </i>\r\n                </div>\r\n\r\n                {(info.name && info.country && info.temperature && info.description)\r\n                    ? <div className=\"city-searched\">\r\n                        <div className=\"city-container\">\r\n                            <div className=\"location\">\r\n                                <div className=\"city-name\">{`${info.name}`}</div>\r\n                            </div>\r\n                            <div className=\"date\">{dates}</div>\r\n                            <div className=\"temperture-card\">{info.temperature}ÂºC</div>\r\n                            <div className=\"date\">{info.description}</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <div className=\"city-searched\">\r\n                        <div className=\"city-container\">\r\n                            <p className=\"date\">{info.message}XD</p>\r\n                        </div>\r\n                    </div>}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import Search from \"./components/Search\";\n\nfunction App() {\n  return (\n    <div>\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}